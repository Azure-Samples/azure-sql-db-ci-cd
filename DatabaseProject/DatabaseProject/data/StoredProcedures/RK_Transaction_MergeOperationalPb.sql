


create procedure [data].[RK_Transaction_MergeOperationalPb]
as
begin
-- =============================================
-- Author:		Ran Wang
-- Create date: 2021-11-23
-- Description:	Commits RK_Transaction from [stg].[RK_Transaction_Operational_Pb] to [data].[RK_Transaction]
-- =============================================

merge into [data].[RK_Transaction] t
using [stg].[RK_Transaction_Operational_Pb] s
on t.[TransactionID] = s.[TransactionID]
when matched then
    update set
        t.[FileName] = s.[FileName],
        t.[BusinessDay] = s.[BusinessDay],
        t.[BusinessHour] = s.[BusinessHour],
        t.[BusinessQuarterHour] = s.[BusinessQuarterHour],
        t.[EquipmentID] = s.[EquipmentID],
        t.[EquipmentType] = s.[EquipmentType],
        t.[SiteID] = s.[SiteID],
        t.[MessageReceptionDate] = s.[MessageReceptionDate],
        t.[Period] = s.[Period],
        t.[IsReintegratedTransaction] = s.[IsReintegratedTransaction],
        t.[ReintegratedDateTime] = s.[ReintegratedDateTime],
        t.[MsgReportDate] = s.[MsgReportDate],
        t.[MediaSerialNumberID] = s.[MediaSerialNumberID],
        t.[ApplicationTransactionSequenceNumber] = s.[ApplicationTransactionSequenceNumber],
        t.[MsgSequenceNumber] = s.[MsgSequenceNumber],
        t.[DeviceId] = s.[DeviceId],
        t.[TransactionType] = s.[TransactionType],
        t.[TransactionBusinessDate] = s.[TransactionBusinessDate],
        t.[TransactionStatus] = s.[TransactionStatus],
        t.[TransactionMediaLastDeviceID] = s.[TransactionMediaLastDeviceID],
        t.[ServiceProviderID] = s.[ServiceProviderID],
        t.[ContractorID] = s.[ContractorID],
        t.[FareAuthorityID] = s.[FareAuthorityID],
        t.[StationID] = s.[StationID],
        t.[StopPointID] = s.[StopPointID],
        t.[ModalType] = s.[ModalType],
        t.[ServiceJourneyType] = s.[ServiceJourneyType],
        t.[StaffID] = s.[StaffID],
        t.[StaffType] = s.[StaffType],
        t.[ShiftNumber] = s.[ShiftNumber],
        t.[MediaCountryCode] = s.[MediaCountryCode],
        t.[MediaIssuerID] = s.[MediaIssuerID],
        t.[MediaRetailerID] = s.[MediaRetailerID],
        t.[MediaType] = s.[MediaType],
        t.[MediaValidityDate] = s.[MediaValidityDate],
        t.[MediaVersion] = s.[MediaVersion],
        t.[MediaSecurityLevel] = s.[MediaSecurityLevel],
        t.[MediaTest] = s.[MediaTest],
        t.[CardEngravedID] = s.[CardEngravedID],
        t.[ApplicationStatus] = s.[ApplicationStatus],
        t.[ActionListStatus] = s.[ActionListStatus],
        t.[ActionListID] = s.[ActionListID],
        t.[ActionListFailureCode] = s.[ActionListFailureCode],
        t.[CSCCurrencyUnit] = s.[CSCCurrencyUnit],
        t.[SystemCurrencyUnit] = s.[SystemCurrencyUnit],
        t.[EODVersionID] = s.[EODVersionID],
        t.[EODVersionComponent1] = s.[EODVersionComponent1],
        t.[EODVersionComponent2] = s.[EODVersionComponent2],
        t.[EODVersionComponent3] = s.[EODVersionComponent3],
        t.[EODVersionComponent4] = s.[EODVersionComponent4],
        t.[EODVersionComponent5] = s.[EODVersionComponent5],
        t.[EODVersionComponent6] = s.[EODVersionComponent6],
        t.[EODVersionComponent7] = s.[EODVersionComponent7],
        t.[EODVersionComponent8] = s.[EODVersionComponent8],
        t.[EODVersionComponent9] = s.[EODVersionComponent9],
        t.[TrackingOperationType] = s.[TrackingOperationType],
        t.[TrackingOperationNumber] = s.[TrackingOperationNumber],
        t.[VehicleID] = s.[VehicleID],
        t.[RouteID] = s.[RouteID],
        t.[TripID] = s.[TripID],
        t.[TripTimeDeparture] = try_cast(case when s.TripTimeDeparture is not null then concat(substring(right (concat('00',s.[TripTimeDeparture] ),4),1,2), ':', substring(right (concat('00',s.[TripTimeDeparture] ),4),3,4)) 
	  				   else null
					   end as time(0)),
        t.[LinePublicNumber] = s.[LinePublicNumber],
        t.[TripType] = s.[TripType],
        t.[StockOperationSequenceNumber] = s.[StockOperationSequenceNumber],
        t.[CalculatedMediaQuantity] = s.[CalculatedMediaQuantity],
        t.[ReasonCodeStockManagement] = s.[ReasonCodeStockManagement],
        t.[StockAction] = s.[StockAction],
        t.[OperationAction] = s.[OperationAction],
        t.[OperationType] = s.[OperationType],
		t.[IsException] = 0,
		t.[FileId] = s.[FileId],
        t.[UpdatedUtc] = sysutcdatetime()
when not matched by target then
   insert (
        [TransactionID],
        [FileName],
        [BusinessDay],
        [BusinessHour],
        [BusinessQuarterHour],
        [EquipmentID],
        [EquipmentType],
        [SiteID],
        [MessageReceptionDate],
        [Period],
        [IsReintegratedTransaction],
        [ReintegratedDateTime],
        [MsgReportDate],
        [MediaSerialNumberID],
        [ApplicationTransactionSequenceNumber],
        [MsgSequenceNumber],
        [DeviceId],
        [TransactionType],
        [TransactionBusinessDate],
        [TransactionStatus],
        [TransactionMediaLastDeviceID],
        [ServiceProviderID],
        [ContractorID],
        [FareAuthorityID],
        [StationID],
        [StopPointID],
        [ModalType],
        [ServiceJourneyType],
        [StaffID],
        [StaffType],
        [ShiftNumber],
        [MediaCountryCode],
        [MediaIssuerID],
        [MediaRetailerID],
        [MediaType],
        [MediaValidityDate],
        [MediaVersion],
        [MediaSecurityLevel],
        [MediaTest],
        [CardEngravedID],
        [ApplicationStatus],
        [ActionListStatus],
        [ActionListID],
        [ActionListFailureCode],
        [CSCCurrencyUnit],
        [SystemCurrencyUnit],
        [EODVersionID],
        [EODVersionComponent1],
        [EODVersionComponent2],
        [EODVersionComponent3],
        [EODVersionComponent4],
        [EODVersionComponent5],
        [EODVersionComponent6],
        [EODVersionComponent7],
        [EODVersionComponent8],
        [EODVersionComponent9],
        [TrackingOperationType],
        [TrackingOperationNumber],
        [VehicleID],
        [RouteID],
        [TripID],
        [TripTimeDeparture],
        [LinePublicNumber],
        [TripType],
        [StockOperationSequenceNumber],
        [CalculatedMediaQuantity],
        [ReasonCodeStockManagement],
        [StockAction],
        [OperationAction],
        [OperationType],
		[IsException],
	    [FileId],
        [InsertedUtc]
    )
    values (
        s.[TransactionID],
        s.[FileName],
        s.[BusinessDay],
        s.[BusinessHour],
        s.[BusinessQuarterHour],
        s.[EquipmentID],
        s.[EquipmentType],
        s.[SiteID],
        s.[MessageReceptionDate],
        s.[Period],
        s.[IsReintegratedTransaction],
        s.[ReintegratedDateTime],
        s.[MsgReportDate],
        s.[MediaSerialNumberID],
        s.[ApplicationTransactionSequenceNumber],
        s.[MsgSequenceNumber],
        s.[DeviceId],
        s.[TransactionType],
        s.[TransactionBusinessDate],
        s.[TransactionStatus],
        s.[TransactionMediaLastDeviceID],
        s.[ServiceProviderID],
        s.[ContractorID],
        s.[FareAuthorityID],
        s.[StationID],
        s.[StopPointID],
        s.[ModalType],
        s.[ServiceJourneyType],
        s.[StaffID],
        s.[StaffType],
        s.[ShiftNumber],
        s.[MediaCountryCode],
        s.[MediaIssuerID],
        s.[MediaRetailerID],
        s.[MediaType],
        s.[MediaValidityDate],
        s.[MediaVersion],
        s.[MediaSecurityLevel],
        s.[MediaTest],
        s.[CardEngravedID],
        s.[ApplicationStatus],
        s.[ActionListStatus],
        s.[ActionListID],
        s.[ActionListFailureCode],
        s.[CSCCurrencyUnit],
        s.[SystemCurrencyUnit],
        s.[EODVersionID],
        s.[EODVersionComponent1],
        s.[EODVersionComponent2],
        s.[EODVersionComponent3],
        s.[EODVersionComponent4],
        s.[EODVersionComponent5],
        s.[EODVersionComponent6],
        s.[EODVersionComponent7],
        s.[EODVersionComponent8],
        s.[EODVersionComponent9],
        s.[TrackingOperationType],
        s.[TrackingOperationNumber],
        s.[VehicleID],
        s.[RouteID],
        s.[TripID],
        try_cast(case when s.TripTimeDeparture is not null then concat(substring(right (concat('00',s.[TripTimeDeparture] ),4),1,2), ':', substring(right (concat('00',s.[TripTimeDeparture] ),4),3,4)) 
	  				   else null
					   end as time(0)),
        s.[LinePublicNumber],
        s.[TripType],
        s.[StockOperationSequenceNumber],
        s.[CalculatedMediaQuantity],
        s.[ReasonCodeStockManagement],
        s.[StockAction],
        s.[OperationAction],
        s.[OperationType],
		0,
		s.[FileId],
        sysutcdatetime()
    ) ;
	end;

GO

